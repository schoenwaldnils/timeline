name: timeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: lint ts
        run: npm run lint:ts

      - name: lint types
        run: npm run lint:types

      - name: lint css
        run: npm run lint:css

  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: build
        run: npm run build

  visual-regression-test:
    runs-on: ubuntu-latest
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: Percy Test
        uses: percy/storybook-action@v0.1.6
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        with:
          custom-command: 'npm run snapshot'

  wait-for-vercel-deployment:
    runs-on: ubuntu-18.04
    steps:
      - name: vercel-preview-url
        uses: zentered/vercel-preview-url@v1.0.0
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_team_id: 'schoenwaldnils'
          vercel_project_id: 'timeline'

      - name: Get URL
        run: echo "https://${{ steps.vercel_preview_url.outputs.preview_url }}"

      - uses: UnlyEd/github-action-await-vercel@v1.1.0
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ steps.vercel_preview_url.outputs.preview_url }}
          timeout: 180 # Wait for 3 minutes before failing

      - name: Display deployment status
        run: 'echo The deployment at ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).url }} is ${{ fromJson(steps.await-vercel.outputs.deploymentDetails).readyState }}'

  lighthouse-check:
    runs-on: ubuntu-latest
    needs: [wait-for-vercel-deployment]
    steps:
      - uses: actions/checkout@master

      - name: vercel-preview-url
        uses: zentered/vercel-preview-url@v1.0.0
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_team_id: 'schoenwaldnils'
          vercel_project_id: 'timeline'

      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@v1.0.10
        id: lighthouseCheck
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          author: ${{ github.actor }}
          awsBucket: ${{ secrets.AWS_S3_BUCKET_LIGHTHOUSE }}
          awsRegion: 'eu-central-1'
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch: ${{ github.ref }}
          urls: 'https://${{ steps.vercel_preview_url.outputs.preview_url }}'
          sha: ${{ github.sha }}

      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: '90'
          minBestPracticesScore: '50'
          minPerformanceScore: '70'
          minProgressiveWebAppScore: '50'
          minSeoScore: '50'
