name: timeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: lint ts
        run: npm run lint:ts

      - name: lint types
        run: npm run lint:types

      - name: lint css
        run: npm run lint:css

  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: export
        run: npm run export

      - name: lint html
        run: npm run lint:html

      - name: Cache build dir
        uses: actions/upload-artifact@v1
        with:
          name: nextBuild-${{github.sha}}
          path: out

  visual-regression-test:
    runs-on: ubuntu-latest
    needs: [test, build]
    env:
      PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Install nvm
        shell: bash -l {0}
        run: nvm install

      - name: node & npm install
        run: |
          rm -rf ./node_modules
          npm ci

      - name: Percy Test
        uses: percy/storybook-action@v0.1.6
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        with:
          custom-command: 'npm run snapshot'

  lighthouse-check:
    runs-on: ubuntu-latest
    needs: [deploy-pr]
    steps:
      - uses: actions/checkout@master

      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@v1.0.10
        id: lighthouseCheck
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          author: ${{ github.actor }}
          awsBucket: ${{ secrets.AWS_S3_BUCKET_LIGHTHOUSE }}
          awsRegion: 'eu-central-1'
          awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
          awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          branch: ${{ github.ref }}
          urls: 'https://${{github.event.number}}.pr.timeline.schoen.world'
          sha: ${{ github.sha }}

      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: '90'
          minBestPracticesScore: '50'
          minPerformanceScore: '70'
          minProgressiveWebAppScore: '50'
          minSeoScore: '50'
